version: '3'
services:

  # Fix Ownership of Build Directory
  # Thanks to Bug in Docker itself
  # We need to use steps like this
  # Because by default, the volume directory
  # Is owned by Root
  # So this helps correct it
  change-vol-ownership:
    container_name: vol_ownership
    # We can use any image we want as long as we can chown
    image: ubuntu
    # Need a user priviliged enough to chown
    user: "root"
    # Specify the group in question
    group_add:
      - '${GID:-1000}'
    volumes:
      - code_directory:/usr/src/app/:rw
      # The volume to chown
      #- disk:/usr/src/app/Data_these:rw
    command: chown -R ${GID:-1000}:${UID:-1000} /usr/src/app/


  my_base_service:
    container_name: base_service
    user: "${GID:-1000}:${UID:-1000}"
    working_dir: /usr/src/app
    build:
      context: .
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
        - "MYUSER=${MYUSER:-container_user}"
    env_file:
      - ".env"
    network_mode: host
    depends_on:
      change-vol-ownership:
        # Wait for the ownership to change
        condition: service_completed_successfully

  julia:
    extends:
      service: my_base_service
    container_name: julia-1-9-3_morph
    build:
      dockerfile: Dockerfile.julia
    extra_hosts:
      - "python-3-10:127.0.0.1"
    environment:
      - CONFIG_FILE_PATH=configs/dashboard_config_disk.json
    volumes:
      - code_directory:/usr/src/app/:rw
      - disk:/usr/src/app/Data_these:rw

    command: julia Dashboard_App.jl

  python:
    extends:
      service: my_base_service
    build:
      dockerfile: Dockerfile.python
    environment:
      - DISPLAY=$DISPLAY
      - XDG_RUNTIME_DIR=/tmp/runtime-root # variable for meshlab warning
    volumes:
      - code_directory:/usr/src/app/:rw
      - X11_unix:/tmp.X11-unix:ro
    command: python3 demos/python/main.py
    privileged: true  # To avoid libGL errors

  latex:
    extends:
      service: my_base_service
    container_name: latex
    build:
      dockerfile: Dockerfile.latex
    volumes:
      - code_directory:/usr/src/app/:rw
    tty: true # makes the container running even when the command is finished.

  node_js:
    extends:
      service: my_base_service
    container_name: node_js
    build:
      dockerfile: Dockerfile.js
    volumes:
      - code_directory:/usr/src/app/:rw
    tty: true # makes the container running even when the command is finished.


volumes:
  disk: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /media/pgalmiche/CORSAIR/Data_these
  code_directory: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/../
  X11_unix: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/.X11-unix



