#!/usr/bin/env bash

git clone --bare https://gitlab.com/pgalmiche/repo-setter.git $PWD/.repo_setter

# define config alias locally since the dotfiles
# aren't installed on the system yet

function repo_setter {
   git --git-dir=$PWD/.repo_setter --work-tree=$PWD $@
}

# create a directory to backup existing dotfiles to
mkdir -p .repo_setter-backup
repo_setter checkout
if [ $? = 0 ]; then
  echo "Checked out files from https://gitlab.com/pgalmiche/repo-setter.git";
  else
    echo "Moving existing files to ./.repo_setter-backup";
    repo_setter checkout 2>&1 | egrep "^\s+" | awk {'print $1'} | xargs -I{} sh -c 'mkdir -p .repo_setter-backup/$(dirname {}); mv {} .repo_setter-backup/{}'
fi

# checkout dotfiles from repo
repo_setter checkout

# remove the repo setter once used
echo ".repo_setter folder removed."
echo "You can find in the .repo_setter-backup folder your old files"
rm -r ./.repo_setter

rm README.md LICENSE install/.env
mv README.md.template README.md
mv install/.env.template install/.env

# overwrite the [USER] etc in README.md
read -p "Enter your git username: " USER </dev/tty
sed -i "s/USER/$USER/g" README.md

read -p "Enter your git repo: " REPO </dev/tty
sed -i "s/YOUR_REPO/$REPO/g" README.md

echo "You can choose as many as you want in: python latex node_js"
read -p "Enter the containers to use: " CONTAINERS </dev/tty
sed -i "s/BOXES/$CONTAINERS/g" install/.env

if [ "$CONTAINERS" == "node_js" ]; then
    REPOCODE="../demos/node_js/"
else
    REPOCODE="../"
fi
sed -i "s|MYCODE|$REPOCODE|g" install/.env

sed -i "s/DOCKER_NAME/$REPO/g" install/.env
sed -i "s/MYSELF/$USER/g" install/.env

# set the uid/gid of the current username
sed -i "s/MYUID/$UID/g" install/.env
sed -i "s/MYGID/$GID/g" install/.env

# set GitLab urls from the entered 
DOC_URL="https://${USER}.gitlab.io/${REPO}"
sed -i "s|YOUR_DOC_URL|$DOC_URL|g" README.md

REPO_URL="https://gitlab.com/${USER}/${REPO}.git"
sed -i "s|YOUR_URL|$REPO_URL|g" README.md


